[gcode_macro TEMP_COMPENSATION_CALIBRATION]
gcode:
    {% set HEATER = params.HEATER|default("bed")|string %}
    {% set START_TEMP = params.START_TEMP|default(25)|int %}
    {% set END_TEMP = params.END_TEMP|default(70)|int %}
    {% set STEP = params.STEP|default(5)|int %}

    {% if HEATER not in ["bed", "extruder"]%}
        { action_raise_error("Unknown heater: {}. Must 'bed' or 'extruder'.".format(HEATER))}
    {% endif %}
    
    {% set temps_list = range(START_TEMP, END_TEMP+1, STEP)|list %}
    {% set result_list = [] %}
    {% for temp in temps_list %}
        {% if HEATER == "bed"%}
            M140 S{temp} # Set temperature for next probe
            M190 S{temp} # Wait for temp to be reached
        {% elif HEATER == "extruder"%}
            M104 S{temp} # Set temperature for next probe
            M109 S{temp} # Wait for temp to be reached
        {% endif %}
        
        PROBE_ACCURACY
        
        M400
    {% endfor %}
    RESPOND MSG="Shutting off heating for both heaters."
    M140 S0
    M104 S0


[gcode_macro CORRECT_Z_OFFSET]
gcode:
    {% set _temp_comp_settings = printer["gcode_macro _TEMP_COMP_SETTINGS"] %} # Pull variables from _TEMP_COMP_SETTINGS
    {% set a = _temp_comp_settings.coeff_a | float %}
    {% set b = _temp_comp_settings.coeff_b | float %}
    {% set base_offset_temp = _temp_comp_settings.base_offset_temp | float%}
    {% set temp = printer.heater_bed.temperature %}
    {% set offset = a*temp*temp + b*temp %}

    SET_GCODE_OFFSET Z={printer.configfile.config.probe.z_offset}
    
    {% if temp > base_offset_temp %}
        SET_GCODE_OFFSET Z={-offset}
        {% set log_msg = "Z offset corrected at {}° by -{}".format(temp, offset) %}
    {% else %}
        SET_GCODE_OFFSET Z=+{offset}
        {% set log_msg = "Z offset corrected at {}° by {}".format(temp, offset) %}
    {% endif %}


    { action_respond_info(log_msg) }
    


[gcode_macro HOME]
description: "G28 clone that will compensate for current bed/extruder temperature corresponding to the calulated interpolation. Interpolation: ax²+bx+c in probe_temp_compensation"
gcode:
    G28 {raw_params}
    CORRECT_Z_OFFSET
